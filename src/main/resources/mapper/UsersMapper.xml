<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="maint.mapper.UsersMapper">

    <select id="getUserByLoginInfo" resultType="UsersEntity">
        SELECT "user_id"
             , "last_name"
             , "first_name"
             , "retirement_flag"
             , "retirement_date"
             , "email"
             , "password"
             , "password_changed_flag"
             , "account_division"
             , "business_corp_id"
             , "operating_company_id"
             , "perm_role_id"
          FROM "users"
         WHERE "del_flag"        = 0
           AND "retirement_flag" = 0
           AND "email"           = #{email}
    </select>

    <select id="countUsersBySearch" resultType="java.lang.Long">
        SELECT COUNT("user_id")
        <include refid="fromWhereBySearch" />
    </select>

    <select id="getUsersBySearch" resultType="usersDetailDto">
        SELECT "user_id"
             , "email"
             , "last_name"
             , "first_name"
             , "retirement_flag"
        <include refid="fromWhereBySearch" />
      ORDER BY "user_id"
         LIMIT #{displayNum}
        OFFSET #{startRowNum}
    </select>

    <select id="getUserByPk" resultType="usersDetailDto">
        SELECT "user_id"
             , "email"
             , "last_name"
             , "first_name"
             , "password_changed_flag"
             , "account_division"
             , "business_corp_id"
             , "operating_company_id"
             , "perm_role_id"
             , "retirement_flag"
             , "retirement_date"
          FROM "users"
         WHERE "del_flag" = 0
           AND "user_id"  = #{userId}
    </select>

    <select id="countUsersByEmail" resultType="java.lang.Integer">
        SELECT COUNT("user_id")
          FROM "users"
         WHERE "del_flag"         = 0
           AND "email"         = #{email}
           AND "retirement_flag"  = 0
        <if test="userId != null">
           AND "user_id"         != #{userId}
        </if>
    </select>

    <select id="getUserPasswordByPK" resultType="java.lang.String">
        SELECT "password"
          FROM "users"
         WHERE "del_flag" = 0
           AND "user_id"  = #{userId}
    </select>

    <select id="getUserByEmail" resultType="UsersDto">
        SELECT "u"."email"
             , "u"."password"
             , "u"."last_name"
             , "u"."first_name"
             , "pr"."perm_role_name"
          FROM "users" "u"
         INNER JOIN "permission_roles" "pr"
            ON "pr"."del_flag"           = 0
           AND "pr"."perm_role_id" = "u"."perm_role_id"
         WHERE "u"."del_flag"            = 0
           AND "u"."retirement_flag"     = 0
           AND "u"."user_id"             = #{userId}
    </select>

    <insert id="registerUsers" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO "users" (
               "email"
             , "password"
             , "password_changed_flag"
             , "last_name"
             , "first_name"
             , "account_division"
             , "business_corp_id"
             , "operating_company_id"
             , "perm_role_id"
             , "retirement_flag"
        <if test="retirementFlag eq 1">
             , "retirement_date"
        </if>
        <include refid="maint.mapper.CommonMapper.insertCommonItemColumns"/>
        )
        VALUES (
               #{email}
             , #{password}
             , #{passwordChangedFlag}
             , #{lastName}
             , #{firstName}
             , #{accountDivision}
             , #{businessCorpId}
             , #{operatingCompanyId}
             , #{permRoleId}
             , #{retirementFlag}
        <if test="retirementFlag eq 1">
             , CURRENT_TIMESTAMP
        </if>
        <include refid="maint.mapper.CommonMapper.insertCommonValues"/>
        )
    </insert>

    <update id="updateUsers">
        UPDATE "users"
           SET "email"                 = #{email}
             , "last_name"             = #{lastName}
             , "first_name"            = #{firstName}
             , "account_division"      = #{accountDivision}
             , "perm_role_id"          = #{permRoleId}
             , "business_corp_id"      = #{businessCorpId}
             , "operating_company_id"  = #{operatingCompanyId}
             , "retirement_flag"       = #{retirementFlag}
             , "password_changed_flag" = #{passwordChangedFlag}
        <if test="password != null and password != ''">
             , "password"              = #{password}
        </if>
        <if test="retirementFlag eq 0">
             , "retirement_date"       = NULL
        </if>
        <if test="retirementFlag eq 1 and retirementDate eq null">
             , "retirement_date"       = CURRENT_TIMESTAMP
        </if>
        <include refid="maint.mapper.CommonMapper.updateCommon"/>
         WHERE "del_flag"              = 0
           AND "user_id"               = #{userId}
    </update>

    <update id="updateUserPassword">
        UPDATE "users"
           SET "password"     = #{password}
             , "password_changed_flag" = 1
        <include refid="maint.mapper.CommonMapper.updateCommon"/>
         WHERE "del_flag"     = 0
           AND "user_id"      = #{userId}
    </update>

    <sql id="fromWhereBySearch">
        FROM "users"
       WHERE "del_flag"           = 0
        <if test="email != null and email != ''">
            AND "email"        LIKE #{likeSearchEmail}
        </if>
        <if test="lastName != null and lastName != ''">
            AND "last_name"    LIKE #{likeSearchLastName}
        </if>
        <if test="firstName != null and firstName != ''">
            AND "first_name"   LIKE #{likeSearchFirstName}
        </if>
        <if test="retirementFlag != null">
            AND "retirement_flag" = #{retirementFlag}
        </if>
        <if test="accountDivision == '02'">
            AND "account_division" = #{accountDivision}
        </if>
    </sql>

    <update id="updateUserPasswordReissue">
        UPDATE "users"
           SET "password"        = #{password}
             , "password_changed_flag"    = 0
             <include refid="maint.mapper.CommonMapper.updateCommon"/>
         WHERE "del_flag"        = 0
           AND "retirement_flag" = 0
           AND "user_id"         = #{userId}
    </update>
</mapper>
